// Lesson 33 git.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>

int main()
{
    std::cout << "Hello World!\n";
}

/*
    Работа с Git. Продолжение
    Новая папка с проектом
    git init - инициализция репозитория
    создаем .gitignore (средствами Студии)
    добавляем файлы для комита ( git add ./)
    создаем комит ( git commit -m "project created" )

    удаленный (remote) репозиторий - публикуем

    Задача: исключить файл secret.cpp из публикуемых.
    git add ./ - добавить все файлы
    git rm --cached secret.cpp - исключить секрет.спп из комита
    добавляем имя файла в игнор (.gitignore) средствами студии 
    (правой кнопкой - игнорировать элемент)
    при этом мняется .gitignore - нужно заново подготовить изменения - 
    - git add ./

*/
/*
    Схемы выполнения кода
    исходный код (текст программы) ................ машинный (исполнимый) код

    компиляторы (языки компилируемого типа)
    на примере С++  текст программы превращается в объектный код, который
    транслируется в машинный.
    Из текста в объектный код - компиляция
    Из объктный в машинный - трансляция (сборка, линковка).
    Весь этот процесс назыв компиляция - процесс построения из исходного кода
    в машинный.


    языки-трансляторы (транслируемого типа) или (платформные языки) - Java, C#,
    Kotlin, VBA
    текст - промежуточный код - платформа -> машинный код


    Интерпретатор (языки интерпретируемого типа)
    REPL - Read-Evaluate-Print-Loop) - считал-вычислил-вывел-заново
    это языки Python, JavaScrit, PHP, DOS
    это набор команд, которые будут выполняться одна за одной
    Исходный код не изменяется, воспринимается как набор команд, и выполняется
    "построчно" или "покомандно", каждый раз компилируя "на лету"
    каждую инструкцию.


    На С++ компилятор проходит текст программы несколько раз. Первым делом
    ищет все переменные, потом считает сколько под них нужно памыти выделить,
    потом эту память выделяет и т.д. Потом объектный промежуточный код линкуется
    (собирается).
    Компиляция из двух частей: 1. все просчитывается, код построен 2. линковшик -
    убирает переменные функции, отавляет адреса вызовов, получается машинный код

    Почемц С++ компилируемый - для быстроты работы.

*/